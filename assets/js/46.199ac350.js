(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{534:function(t,s,a){"use strict";a.r(s);var n=a(23),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"草稿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#草稿"}},[t._v("#")]),t._v(" 草稿")]),t._v(" "),a("h1",{attrs:{id:"图像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图像"}},[t._v("#")]),t._v(" 图像")]),t._v(" "),a("h2",{attrs:{id:"矢量图和栅格图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矢量图和栅格图"}},[t._v("#")]),t._v(" 矢量图和栅格图")]),t._v(" "),a("h2",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),a("p",[t._v("首先要明确一点，使用 this 的目的是什么？ this 的目的是 ”在对象内部使用对象内部的属性“。执行上下文中的 this 对象，就等于说，在")]),t._v(" "),a("h3",{attrs:{id:"函数表达式和函数声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数表达式和函数声明"}},[t._v("#")]),t._v(" 函数表达式和函数声明")]),t._v(" "),a("p",[t._v("首先来区分一下，什么是函数表达式，什么是函数声明，有一个很简单的判断方法: "),a("txt",{attrs:{bold:""}},[t._v("函数表达式可以省略函数名，函数声明不行。")])],1),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("函数表达式还是函数声明对结果有什么影响呢？看下面的结果\n"),a("mg",{attrs:{src:"/images/js/scope-function-define.jpg",alt:"scope-function-define"}}),t._v("\n如上图中所示，对于函数声明，函数名称绑定在声明所在的 "),a("code",[t._v("foo")]),t._v(" 函数的作用域\n"),a("mg",{attrs:{src:"/images/js/scope-function-expression.jpg",alt:"scope-function-expression"}}),t._v("\n如上图中所示，对于函数表达式，相当于有两个标识符可以查找到它，它的函数名称"),a("code",[t._v("bar")]),t._v("绑定到了其自身的函数作用域中。\n说了这么多，有啥作用呢？就是像上面这样，两个"),a("code",[t._v("bar")]),t._v("名称绑定到了不同的作用域，不冲突，然而好像也并没有很大的作用。")],1),t._v(" "),a("p",[t._v("以太网和因特网的区别")]),t._v(" "),a("h2",{attrs:{id:"部分api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部分api"}},[t._v("#")]),t._v(" 部分API")]),t._v(" "),a("ul",[a("li",[t._v("ArrayBuffer: 类似于 malloc，表示一段固定长度内存空间")]),t._v(" "),a("li",[t._v("Blob: 理解为一个文件的对象表示即可，file 接口就是基于 Blob。")]),t._v(" "),a("li",[t._v("File：文件是特殊类型的 Blob")])]),t._v(" "),a("p",[t._v("URL.createObjectURL： 接收一个 File 对象，Blob 或者是 MediaSource 对象，生成一个可供页面显示用的 URL,")]),t._v(" "),a("h2",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),a("p",[a("check",{attrs:{id:"webpack-composition"}},[a("template",{slot:"label"},[t._v("描述 Wesbpack 的组成")]),t._v(" "),a("notes",[t._v("entry, output, loader, plugin")])],2),t._v(" "),a("check",{attrs:{id:"watch"}},[a("template",{slot:"label"},[t._v("watch的基本原理和问题")]),t._v(" "),a("notes",[t._v("比较最后编辑时间判断是否更新。自动构建，手动刷新，放在硬盘")])],2),t._v(" "),a("check",{attrs:{id:"chunks-module-bundle"}},[a("template",{slot:"label"},[t._v("Webpack中的 module, chunk, bundle 的区别")]),t._v(" "),a("notes")],2),t._v(" "),a("check",{attrs:{id:"what-is-tree-shaking"}},[a("template",{slot:"label"},[t._v("什么是 Tree Shaking?")]),t._v(" "),a("notes",[t._v("就是删除未使用的死代码，经典例子是 export 了两个函数，只用到一个，没用到的那个就不会在 bundle 里面")])],2)],1)])}),[],!1,null,null,null);s.default=e.exports}}]);