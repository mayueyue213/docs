(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{408:function(e,s,t){"use strict";t.r(s);var a=t(41),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"源码目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码目录"}},[e._v("#")]),e._v(" 源码目录")]),e._v(" "),t("p",[e._v("源码在 src 目录下，"),t("code",[e._v("tree -L 1")]),e._v(" 结果如下")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n├── compiler\n├── core\n├── platforms\n├── server\n├── sfc\n└── shared\n")])])]),t("h2",{attrs:{id:"compiler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compiler"}},[e._v("#")]),e._v(" compiler")]),e._v(" "),t("p",[e._v("编译相关，将 template 转换成中间代码。编译的核心三步在这里实现")]),e._v(" "),t("ul",[t("li",[e._v("AST 生成")]),e._v(" "),t("li",[e._v("AST 优化")]),e._v(" "),t("li",[e._v("中间代码生成")])]),e._v(" "),t("p",[e._v("这三个步骤是后续学习的一个重点。")]),e._v(" "),t("p",[e._v("后面我们会说到的 "),t("code",[e._v("entry-runtime-with-compiler.js")]),e._v(" 入口，相对于 "),t("code",[e._v("runtime/index.js")]),e._v("，就是加上了 compiler，具备了运行时 template 编译能力。")]),e._v(" "),t("h2",{attrs:{id:"core"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#core"}},[e._v("#")]),e._v(" core")]),e._v(" "),t("p",[e._v("Vue 核心，目录如下")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n├── components\n├── global"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("api\n├── instance\n├── observer\n├── util\n├── vdom\n├── config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("js\n└── index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("js\n")])])]),t("p",[e._v("包含了 内置组件、全局API、构造函数、观察者、Vitual DOM和一些工具函数，这是 Vue 的核心。")]),e._v(" "),t("h2",{attrs:{id:"platforms"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#platforms"}},[e._v("#")]),e._v(" platforms")]),e._v(" "),t("p",[e._v("子目录如下")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n├── web\n└── weex\n")])])]),t("p",[e._v("这是针对不同平台的入口配置，web 和面向 Native 的 weex 所需的内容并不完全一致，因此需要做不同的打包，我们主要研究 "),t("code",[e._v("web")]),e._v(" 平台的入口。")]),e._v(" "),t("h2",{attrs:{id:"server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server"}},[e._v("#")]),e._v(" server")]),e._v(" "),t("p",[e._v("SSR相关的逻辑，SSR是需要单独深入的部分，这里不做展开。")]),e._v(" "),t("h2",{attrs:{id:"sfc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sfc"}},[e._v("#")]),e._v(" sfc")]),e._v(" "),t("p",[e._v("sfc 是 "),t("strong",[e._v("single-file components (单文件组件)")]),e._v(" 的缩写，也就是"),t("code",[e._v(".vue")]),e._v("文件，\n这个目录下就一个 "),t("strong",[e._v("parser.js")]),e._v(" 文件，负责识别 script，template和style各部分，将 "),t("code",[e._v(".vue")]),e._v(" 文件解析成 JS 对象。")]),e._v(" "),t("h2",{attrs:{id:"shared"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shared"}},[e._v("#")]),e._v(" shared")]),e._v(" "),t("p",[e._v("这里是一些公共变量，方法。理解为"),t("strong",[e._v("share between client and server")]),e._v("即可，比较典型的是 "),t("code",[e._v("data-server-rendered")]),e._v(" 这个SSR时使用到的标记。")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("就一个字 —— 很好。")])])}),[],!1,null,null,null);s.default=r.exports}}]);